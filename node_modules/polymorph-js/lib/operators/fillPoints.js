Object.defineProperty(exports, "__esModule", { value: true });
var math_1 = require("../utilities/math");
var createNumberArray_1 = require("../utilities/createNumberArray");
function fillPoints(matrix, addPoints) {
    var ilen = matrix[0].length;
    for (var i = 0; i < ilen; i++) {
        var left = matrix[0][i];
        var right = matrix[1][i];
        var totalLength = math_1.max(left.length + addPoints, right.length + addPoints);
        matrix[0][i] = fillSubpath(left, totalLength);
        matrix[1][i] = fillSubpath(right, totalLength);
    }
}
exports.fillPoints = fillPoints;
function fillSubpath(ns, totalLength) {
    var totalNeeded = totalLength - ns.length;
    var ratio = Math.ceil(totalNeeded / ns.length);
    var result = createNumberArray_1.createNumberArray(totalLength);
    result[0] = ns[0];
    result[1] = ns[1];
    var k = 1, j = 1;
    while (j < totalLength - 1) {
        result[++j] = ns[++k];
        result[++j] = ns[++k];
        result[++j] = ns[++k];
        result[++j] = ns[++k];
        var dx = result[++j] = ns[++k];
        var dy = result[++j] = ns[++k];
        if (totalNeeded) {
            for (var f = 0; f < ratio && totalNeeded; f++) {
                result[j + 5] = result[j + 3] = result[j + 1] = dx;
                result[j + 6] = result[j + 4] = result[j + 2] = dy;
                j += 6;
                totalNeeded -= 6;
            }
        }
    }
    return result;
}
exports.fillSubpath = fillSubpath;
